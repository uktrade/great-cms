{"version":3,"file":"common.js","mappings":"oCAaC,WACC,SAASA,EAAaC,EAAUC,GAC9B,IAIMC,QAHa,IAAVD,EACHA,EAC2C,SAA3CD,EAASG,aAAa,kBACK,OAAS,QACpCC,EAAWC,SAASC,cAAT,WACXN,EAASG,aAAa,mBAE5BH,EAASO,aAAa,gBAAiBL,GACvCE,EAASG,aAAa,gBAAiBL,GAYzCM,OAAOC,iBAAiB,oBATxB,WACEJ,SAASK,iBAAiB,wBAAwBC,SAAQ,SAACC,GACzDb,EAAaa,GAAI,GACjBA,EAAGH,iBAAiB,SAAS,SAACI,GAC5Bd,EAAac,EAAMC,iBAlB1B,KCZGC,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,SCrBfG,CAAQ,O","sources":["webpack://[name]/./core/js/src/dit.reveal.js","webpack://[name]/webpack/bootstrap","webpack://[name]/./core/js/common.js"],"sourcesContent":["/**\n * Reveal functionality\n *\n * Used to toggle the visibility of a given component using a given trigger.\n * Trigger and target component can be separate in the markup, and are linked\n * using their respective `aria-controls` and `id` attributes.\n *\n * Usage:\n *    <button aria-controls=\"target\" data-reveal-button>Toggle</button>\n *    <div id=\"target\">Content to reveal</div>\n */\n\n// eslint-disable-next-line func-names\n;(function() {\n  function toggleReveal(buttonEl, state) {\n    const openState =\n      typeof state !== 'undefined'\n        ? state\n        : buttonEl.getAttribute('aria-expanded') !== 'true'\n    const expandedAttr = openState ? 'true' : 'false'\n    const targetEl = document.querySelector(\n      `#${buttonEl.getAttribute('aria-controls')}`\n    )\n    buttonEl.setAttribute('aria-expanded', expandedAttr)\n    targetEl.setAttribute('aria-expanded', expandedAttr)\n  }\n\n  function init() {\n    document.querySelectorAll('[data-reveal-button]').forEach((el) => {\n      toggleReveal(el, false)\n      el.addEventListener('click', (event) => {\n        toggleReveal(event.target)\n      })\n    })\n  }\n\n  window.addEventListener('DOMContentLoaded', init)\n})()\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require('./src/dit.reveal')\n"],"names":["toggleReveal","buttonEl","state","expandedAttr","getAttribute","targetEl","document","querySelector","setAttribute","window","addEventListener","querySelectorAll","forEach","el","event","target","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","require"],"sourceRoot":""}