# Generated by Django 4.1.9 on 2023-06-30 15:26
import logging

from django.db import migrations

from core import snippet_slugs

previous_snippet_spec = (
    {
        'internal_title': 'Guidance - Verification code not delivered',
        'title': 'Resend confirmation code',
        'body': (
            '<p>Emails can take a few minutes to arrive, or can go straight into your junk folder.</p>'
            '<p>If your confirmation code has not arrived and is not in your junk folder, you can resend a new code.</p>'
            '<p><a href="/profile/enrol/resend-verification/resend/">Resend my code</a>.</p>'
        ),
    },
)

new_snippet_spec = {
    'internal_title': 'Guidance - Verification code not delivered',
    'title': '',
    'body': (
        '<div class="govuk-notification-banner" role="alert" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">'
        '<div class="govuk-notification-banner__header">'
        '<h2 class="govuk-heading-s govuk-!-margin-0 great-text-white">Resend confirmation code</h2>'
        '</div>'
        '<div class="govuk-notification-banner__content">'
        '<p class="govuk-body">'
        'Emails can take a few minutes to arrive, or can go straight into your junk folder.'
        '</p>'
        '<p class="govuk-body">'
        'If your confirmation code has not arrived and is not in your junk folder, you can resend a new code.'
        '</p>'
        '<a href="/profile/enrol/resend-verification/resend/" class="govuk-link" role="button">Resend my code</a>'
        '</div>'
        '</div>'
    ),
}


def backwards(apps, schema_editor):
    _slug = snippet_slugs.HELP_VERIFICATION_CODE_MISSING
    ContactUsGuidanceSnippet = apps.get_model(
        'contact',
        'ContactUsGuidanceSnippet',
    )

    try:
        snippet = ContactUsGuidanceSnippet.objects.get(slug=_slug)
    except ContactUsGuidanceSnippet.DoesNotExist:
        pass
    else:
        snippet.body = previous_snippet_spec['body']
        snippet.title = previous_snippet_spec['title']
        snippet.save()


def forwards(apps, schema_editor):
    _slug = snippet_slugs.HELP_VERIFICATION_CODE_MISSING

    ContactUsGuidanceSnippet = apps.get_model(
        'contact',
        'ContactUsGuidanceSnippet',
    )

    try:
        snippet = ContactUsGuidanceSnippet.objects.get(slug=_slug)
    except ContactUsGuidanceSnippet.DoesNotExist:
        pass
    else:
        snippet.body = new_snippet_spec['body']
        snippet.title = new_snippet_spec['title']
        snippet.save()


class Migration(migrations.Migration):
    dependencies = [
        ('contact', '0011_delete_contactpagecontentsnippet'),
    ]

    operations = [
        migrations.RunPython(forwards, backwards),
    ]
