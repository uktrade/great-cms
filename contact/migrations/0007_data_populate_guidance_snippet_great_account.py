# Generated by Django 2.2.24 on 2021-06-15 17:06

from django.db import migrations

from core import snippet_slugs

snippet_specs = [
    {
        'slug': snippet_slugs.HELP_MISSING_VERIFY_EMAIL,
        'internal_title': 'Guidance - Email verification missing',
        'title': 'I have not received my email confirmation',
        'body': (
            '<p>Check to see if the link is in your spam folder.</p>'
            '<p>If you cannot find the link, please <a href="/contact/domestic/">submit an enquiry</a> '
            'and include your email address.</p>'
        ),
    },
    {
        'slug': snippet_slugs.HELP_PASSWORD_RESET,
        'internal_title': 'Guidance - Missing password reset link',
        'title': 'I have not received my password reset link',
        'body': (
            '<p>Check to see if the link is in your spam folder.</p>'
            '<p>If you cannot find the link, please <a href="/sso/accounts/password/reset/">'
            'request a new link to reset your password</a>.</p>.'
        ),
    },
    {
        'slug': snippet_slugs.HELP_COMPANIES_HOUSE_LOGIN,
        'internal_title': 'Guidance - Companies House login not working',
        'title': 'I have tried to use Companies House verification and got an error message',
        'body': (
            '<p>We are working with Companies House to improve the reliability of the connection.</p>'
            '<p>Please try verifying again. If the error occurs, refresh the page. '
            'Sometimes it takes a few tries before it works.</p>'
            '<p>You can also <a href="/find-a-buyer/verify/letter-send/">verify by requesting a letter</a>.</p>'
        ),
    },
    {
        'slug': snippet_slugs.HELP_VERIFICATION_CODE_ENTER,
        'internal_title': 'Guidance - Where to enter letter verification code',
        'title': 'I do not know where to enter my verification code',
        'body': (
            '<p>Go to <a href="/profile/find-a-buyer/">your business profile</a>.</p>'
            '<p>Check that your Company description is correct. To add a description, '
            "click the 'Edit' button next to Company description.</p>"
            '<p>Once you have saved your description, click on the red box that says '
            "'Verify your company' (at the top of the screen) and enter the code from "
            'the Companies House letter that was sent to your registered address.</p>'
        ),
    },
    {
        'slug': snippet_slugs.HELP_VERIFICATION_CODE_LETTER,
        'internal_title': 'Guidance - Verification letter not delivered',
        'title': 'I have not received my letter containing the verification code',
        'body': (
            '<p>The verification letter has been sent to your company address as registered at Companies House.</p>'
            '<p>You can also <a href="/find-a-buyer/verify/companies-house/">verify through Companies House</a>.</p>'
        ),
    },
    {
        'slug': snippet_slugs.HELP_VERIFICATION_CODE_MISSING,
        'internal_title': 'Guidance - Verification code not delivered',
        'title': 'Resend confirmation code',
        'body': (
            '<p>Emails can take a few minutes to arrive, or can go straight into your junk folder.</p>'
            '<p>If your confirmation code has not arrived and is not in your junk folder, you can resend a new code.</p>'
            '<p><a href="/profile/enrol/resend-verification/resend/">Resend my code</a>.</p>'
        ),
    },
    {
        'slug': snippet_slugs.HELP_ACCOUNT_COMPANY_NOT_FOUND,
        'internal_title': 'Guidance - Company not found',
        'title': 'I cannot find my company',
        'body': (
            '<p>We are working with Companies House to improve the reliability of the connection.</p>'
            '<p>Please make sure you typed the registered name of your company. '
            'If you still need help, please <a href="/contact/domestic/">submit an enquiry</a>.</p>'
        ),
    },
]


def forwards(apps, schema_editor):
    ContactUsGuidanceSnippet = apps.get_model(
        'contact',
        'ContactUsGuidanceSnippet',
    )

    for spec in snippet_specs:
        _slug = spec['slug']

        try:
            ContactUsGuidanceSnippet.objects.get(slug=_slug)
        except ContactUsGuidanceSnippet.DoesNotExist:
            snippet = ContactUsGuidanceSnippet(**spec)
            snippet.save()


def backwards(apps, schema_editor):
    ContactUsGuidanceSnippet = apps.get_model(
        'contact',
        'ContactUsGuidanceSnippet',
    )

    for spec in snippet_specs:
        ContactUsGuidanceSnippet.objects.filter(slug=spec['slug']).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0006_contactusguidancesnippet'),
    ]

    operations = [
        migrations.RunPython(forwards, backwards),
    ]
