# Generated by Django 2.2.23 on 2021-06-07 12:32

from django.db import migrations

from core import snippet_slugs

FORM_PAGE_SLUG = snippet_slugs.EUEXIT_DOMESTIC_FORM
SUCCESS_PAGE_SLUG = snippet_slugs.EUEXIT_FORM_SUCCESS


def forwards_form_page(apps, schema_editor):
    ContactPageContentSnippet = apps.get_model(
        'contact',
        'ContactPageContentSnippet',
    )

    try:
        ContactPageContentSnippet.objects.get(
            slug=FORM_PAGE_SLUG,
        )
    except ContactPageContentSnippet.DoesNotExist:
        snippet = ContactPageContentSnippet(
            slug=FORM_PAGE_SLUG,
            internal_title='Transition Period form supporting content',
            breadcrumbs_label='Transition period enquiries',
            heading='Transition period enquiries',
            body_text=(
                '<p>See our guidance on <a href="https://www.gov.uk/transition">'
                "the transition period</a>. If you can't find the information you're "
                'looking for, complete the form below and one of our experts will try to help you.</p>'
            ),
            submit_button_text='Submit',
        )
        snippet.save()


def backwards_form_page(apps, schema_editor):
    ContactPageContentSnippet = apps.get_model(
        'contact',
        'ContactPageContentSnippet',
    )

    ContactPageContentSnippet.objects.filter(
        slug=FORM_PAGE_SLUG,
    ).delete()


def forwards_success_page(apps, schema_editor):
    ContactSuccessSnippet = apps.get_model(
        'contact',
        'ContactSuccessSnippet',
    )

    try:
        ContactSuccessSnippet.objects.get(
            slug=SUCCESS_PAGE_SLUG,
        )
    except ContactSuccessSnippet.DoesNotExist:
        snippet = ContactSuccessSnippet(
            slug=SUCCESS_PAGE_SLUG,
            internal_title='Transition Period form success page content',
            breadcrumbs_label='Transition period',
            heading='Thank you for submitting your question',
            body_text='We have sent you a confirmation email.',
            next_title='What happens next',
            next_body_text='We will review your question and get back to you.',
        )
        snippet.save()


def backwards_success_page(apps, schema_editor):

    ContactSuccessSnippet = apps.get_model(
        'contact',
        'ContactSuccessSnippet',
    )
    ContactSuccessSnippet.objects.filter(
        slug=SUCCESS_PAGE_SLUG,
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0004_contactsuccesssnippet_breadcrumbs_label'),
    ]

    operations = [
        migrations.RunPython(forwards_form_page, backwards_form_page),
        migrations.RunPython(forwards_success_page, backwards_success_page),
    ]
