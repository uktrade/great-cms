# Generated by Django 2.2.24 on 2021-06-22 13:48

from django.db import migrations

from core import snippet_slugs

snippet_data = {
    snippet_slugs.HELP_FORM_SUCCESS_EVENTS: dict(
        internal_title='Contact Events form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you soon.',
    ),
    snippet_slugs.HELP_FORM_SUCCESS_DSO: dict(
        internal_title='Contact Defence and Security Organisation form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you soon.',
    ),
    snippet_slugs.HELP_FORM_SUCCESS_EXPORT_ADVICE: dict(
        internal_title='Contact exporting from the UK form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you soon.',
    ),
    snippet_slugs.HELP_FORM_SUCCESS_FEEDBACK: dict(
        internal_title='Contact feedback form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you.',
    ),
    snippet_slugs.HELP_FORM_SUCCESS_FIND_COMPANIES: dict(
        internal_title='Contact find UK companies form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you soon.',
    ),
    snippet_slugs.HELP_FORM_SUCCESS_INTERNATIONAL: dict(
        internal_title='Contact international form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you soon.',
    ),
    snippet_slugs.HELP_FORM_SUCCESS_SOO: dict(
        internal_title='Contact Selling Online Overseas form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text=(
            'A member of staff from the Department for International Trade will review your '
            'application and we will respond to you within 5 working days. Suitable applications '
            'will be passed to the marketplace for review.'
        ),
    ),
    snippet_slugs.HELP_FORM_SUCCESS_BEIS: dict(
        # POSSIBLY NO LONGER USED - behind a feature flag so no content for this page in V1 CMS
        # Instead, using sensible default content for now.
        internal_title='Contact BEIS form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you soon.',
    ),
    snippet_slugs.HELP_FORM_SUCCESS_DEFRA: dict(
        # POSSIBLY NO LONGER USED - behind a feature flag so no content for this page in V1 CMS
        # Instead, using sensible default content for now.
        internal_title='Contact DEFRA form success page content',
        breadcrumbs_label='Contact us',  # Not shown in page rendered by DomesticSuccessView
        heading='We have received your enquiry. Thank you.',
        body_text="We've also sent an email with the information you've provided.",
        next_title='What happens next',
        next_body_text='Our team will have a look at what you need and will come back to you soon.',
    ),
}


def forwards(apps, schema_editor):
    ContactSuccessSnippet = apps.get_model(
        'contact',
        'ContactSuccessSnippet',
    )

    for slug, data in snippet_data.items():
        try:
            ContactSuccessSnippet.objects.get(
                slug=slug,
            )
        except ContactSuccessSnippet.DoesNotExist:
            snippet = ContactSuccessSnippet(
                slug=slug,
                **data,
            )
            snippet.save()


def backwards(apps, schema_editor):
    ContactSuccessSnippet = apps.get_model(
        'contact',
        'ContactSuccessSnippet',
    )

    for slug in snippet_data.keys():
        ContactSuccessSnippet.objects.filter(slug=slug).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('contact', '0008_data_add_domestic_contact_success_snippet'),
    ]

    operations = [
        migrations.RunPython(forwards, backwards),
    ]
