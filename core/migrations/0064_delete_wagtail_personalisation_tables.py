# Generated by Django 2.2.19 on 2021-03-09 16:12

import logging

from django.db import connection, migrations

logger = logging.getLogger(__name__)


def drop_wagtail_personalisation_tables(apps, schema_migration):
    # Drop the DB tables from wagtail-personalisation, which are no longer needed.
    # We're expecting them to be empty (and we've checked), with no cascading side-effects
    table_names = [
        # The order of dropping these tables matters and has been tested locally
        'wagtail_personalisation_dayrule',
        'wagtail_personalisation_devicerule',
        'wagtail_personalisation_origincountryrule',
        'wagtail_personalisation_personalisablepagemetadata',
        'wagtail_personalisation_queryrule',
        'wagtail_personalisation_referralrule',
        'wagtail_personalisation_segment_excluded_users',
        'wagtail_personalisation_segment_static_users',
        'wagtail_personalisation_timerule',
        'wagtail_personalisation_userisloggedinrule',
        'wagtail_personalisation_visitcountrule',
        'wagtail_personalisation_segment',
    ]
    logger.info("Dropping redundant DB tables %s", table_names)
    with connection.cursor() as cursor:
        for table_name in table_names:
            query = f"DROP TABLE IF EXISTS {table_name}"
            logger.info(f"Query: {query}")
            cursor.execute(query)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0063_mop_up_migration_after_squashing_0001_to_0038'),
    ]

    operations = [
        migrations.RunPython(
            drop_wagtail_personalisation_tables,
            migrations.RunPython.noop,
        ),
    ]
