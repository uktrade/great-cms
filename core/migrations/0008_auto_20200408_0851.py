# Generated by Django 2.2.10 on 2020-04-08 08:51

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail_personalisation.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_auto_20200407_1252'),
    ]

    operations = [
        migrations.AddField(
            model_name='detailpage',
            name='body',
            field=wagtail.core.fields.StreamField([('body', wagtail.core.blocks.StructBlock([('segment', wagtail.core.blocks.ChoiceBlock(choices=wagtail_personalisation.blocks.list_segment_choices, help_text='Only show this content block for users in this segment', label='Personalisation segment', required=False)), ('paragraph', wagtail.core.blocks.RichTextBlock())], icon='pilcrow', template='core/personalised_page_struct_paragraph_block.html'))], default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='detailpage',
            name='template',
            field=models.CharField(default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='listpage',
            name='record_read_progress',
            field=models.BooleanField(default=False, help_text='Should we record when a user views a page in this collection?'),
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, null=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, null=True, verbose_name='modified')),
                ('sso_id', models.TextField()),
                ('list_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_views_list', to='core.ListPage')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_views', to='core.DetailPage')),
            ],
            options={
                'ordering': ['lesson__pk'],
                'unique_together': {('page', 'sso_id',)},
            },
        ),
    ]
