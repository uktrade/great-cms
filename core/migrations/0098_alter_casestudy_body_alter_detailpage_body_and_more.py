# Generated by Django 4.1.10 on 2023-08-15 13:05

import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models

import core.blocks
import core.models


class Migration(migrations.Migration):
    dependencies = [
        ('wagtailmedia', '0004_duration_optional_floatfield'),
        ('core', '0097_micrositepage_external_link_label_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='casestudy',
            name='body',
            field=wagtail.fields.StreamField(
                [
                    (
                        'media',
                        wagtail.blocks.StreamBlock(
                            [
                                (
                                    'video',
                                    wagtail.blocks.StructBlock(
                                        [('video', core.blocks.MediaChooserBlock(label='Video'))],
                                        template='core/includes/_case_study_video.html',
                                    ),
                                ),
                                ('image', core.blocks.ImageBlock()),
                            ],
                            max_num=2,
                            min_num=1,
                        ),
                    ),
                    ('text', wagtail.blocks.RichTextBlock(features=())),
                    (
                        'quote',
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    'quotes',
                                    wagtail.blocks.StreamBlock(
                                        [('quote', wagtail.blocks.RichTextBlock(features=()))],
                                        block_counts={'quote': {'max_num': 10}},
                                        required=False,
                                    ),
                                ),
                                (
                                    'attribution',
                                    wagtail.blocks.CharBlock(label='Who said it?', max_length=255, required=False),
                                ),
                                ('role', wagtail.blocks.CharBlock(label='Their role', max_length=255, required=False)),
                            ]
                        ),
                    ),
                ],
                help_text='This block must contain one Media section (with one or two items in it) and/or Quote sections, then one Text section.',
                use_json_field=True,
                validators=[core.models.case_study_body_validation],
            ),
        ),
        migrations.AlterField(
            model_name='detailpage',
            name='body',
            field=wagtail.fields.StreamField(
                [
                    (
                        'paragraph',
                        wagtail.blocks.StructBlock(
                            [('paragraph', wagtail.blocks.RichTextBlock())],
                            icon='fa-font',
                            template='core/struct_paragraph_block.html',
                        ),
                    ),
                    (
                        'video',
                        wagtail.blocks.StructBlock(
                            [('video', core.blocks.MediaChooserBlock(label='Video'))],
                            help_text='Video displayed within a full-page-width block',
                            template='core/includes/_video_full_width.html',
                        ),
                    ),
                    ('case_study', core.blocks.CaseStudyStaticBlock(icon='fa-book')),
                    (
                        'Step',
                        wagtail.blocks.StructBlock(
                            [
                                ('title', wagtail.blocks.CharBlock(max_length=255)),
                                ('body', wagtail.blocks.RichTextBlock()),
                                ('image', wagtail.images.blocks.ImageChooserBlock(required=False)),
                            ],
                            icon='cog',
                        ),
                    ),
                    (
                        'fictional_example',
                        wagtail.blocks.StructBlock(
                            [('fiction_body', wagtail.blocks.RichTextBlock(icon='openquote'))],
                            icon='fa-commenting-o',
                            template='learn/fictional_company_example.html',
                        ),
                    ),
                    (
                        'ITA_Quote',
                        wagtail.blocks.StructBlock(
                            [
                                ('quote', wagtail.blocks.RichTextBlock()),
                                ('author', wagtail.blocks.CharBlock(max_length=255)),
                            ],
                            icon='fa-quote-left',
                        ),
                    ),
                    (
                        'pros_cons',
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    'pros',
                                    wagtail.blocks.StreamBlock(
                                        [
                                            (
                                                'item',
                                                wagtail.blocks.StructBlock(
                                                    [('item', wagtail.blocks.CharBlock(max_length=255))],
                                                    icon='fa-arrow-right',
                                                ),
                                            )
                                        ]
                                    ),
                                ),
                                (
                                    'cons',
                                    wagtail.blocks.StreamBlock(
                                        [
                                            (
                                                'item',
                                                wagtail.blocks.StructBlock(
                                                    [('item', wagtail.blocks.CharBlock(max_length=255))],
                                                    icon='fa-arrow-right',
                                                ),
                                            )
                                        ]
                                    ),
                                ),
                            ],
                            icon='fa-arrow-right',
                            template='learn/pros_and_cons.html',
                        ),
                    ),
                    (
                        'choose_do_not_choose',
                        wagtail.blocks.StructBlock(
                            [
                                ('choose_title', wagtail.blocks.CharBlock(max_length=255)),
                                ('choose_body', wagtail.blocks.RichTextBlock(features=())),
                                ('do_not_choose_title', wagtail.blocks.CharBlock(max_length=255)),
                                ('do_not_choose_body', wagtail.blocks.RichTextBlock(features=())),
                            ]
                        ),
                    ),
                    (
                        'image',
                        core.blocks.ImageBlock(
                            help_text='Image displayed within a full-page-width block',
                            template='core/includes/_image_full_width.html',
                        ),
                    ),
                ],
                use_json_field=True,
            ),
        ),
        migrations.AlterField(
            model_name='detailpage',
            name='hero',
            field=wagtail.fields.StreamField(
                [
                    ('Image', core.blocks.ImageBlock(template='core/includes/_hero_image.html')),
                    (
                        'Video',
                        wagtail.blocks.StructBlock(
                            [('video', core.blocks.MediaChooserBlock(label='Video'))],
                            template='core/includes/_hero_video.html',
                        ),
                    ),
                ],
                blank=True,
                null=True,
                use_json_field=True,
                validators=[core.models.hero_singular_validation],
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='external_link_label',
            field=models.CharField(
                blank=True,
                default='',
                help_text='The label to be included within the menu items.',
                max_length=256,
                null=True,
                verbose_name='External link label',
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='external_link_url',
            field=models.URLField(
                blank=True, help_text='The url of the external link', null=True, verbose_name='External link url'
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='facebook',
            field=models.URLField(blank=True, verbose_name='Facebook'),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='hero_image',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='core.alttextimage',
                verbose_name='Hero image',
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='hero_video',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='wagtailmedia.media',
                verbose_name='Hero video',
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='hero_video_transcript',
            field=wagtail.fields.RichTextField(
                blank=True,
                help_text='If the video is present, a transcript must be provided.',
                null=True,
                verbose_name='Hero video transcript',
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='linkedin',
            field=models.URLField(blank=True, verbose_name='LinkedIn'),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='page_body',
            field=wagtail.fields.StreamField(
                [
                    (
                        'form',
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    'type',
                                    wagtail.blocks.ChoiceBlock(
                                        blank=False,
                                        choices=[('Short', 'Short'), ('Long', 'Long')],
                                        label='type',
                                        null=False,
                                    ),
                                ),
                                ('email_subject', wagtail.blocks.TextBlock(label='Email subject', required=True)),
                                ('email_title', wagtail.blocks.TextBlock(label='Email title', required=True)),
                                ('email_body', wagtail.blocks.TextBlock(label='Email body', required=True)),
                            ],
                            label='Form',
                        ),
                    ),
                    ('text', wagtail.blocks.RichTextBlock(label='Text', template='microsites/blocks/text.html')),
                    (
                        'image',
                        wagtail.images.blocks.ImageChooserBlock(
                            label='Image', required=False, template='microsites/blocks/image.html'
                        ),
                    ),
                    (
                        'image_full_width',
                        wagtail.images.blocks.ImageChooserBlock(
                            label='Image full width', required=False, template='microsites/blocks/image_full_width.html'
                        ),
                    ),
                    (
                        'video',
                        wagtail.blocks.StructBlock(
                            [('video', core.blocks.MediaChooserBlock(label='Video'))],
                            label='Video',
                            template='microsites/blocks/video.html',
                        ),
                    ),
                    (
                        'columns',
                        wagtail.blocks.StreamBlock(
                            [
                                (
                                    'column',
                                    wagtail.blocks.StructBlock(
                                        [
                                            (
                                                'image',
                                                wagtail.images.blocks.ImageChooserBlock(
                                                    label='Hero Image', required=False
                                                ),
                                            ),
                                            ('text', wagtail.blocks.RichTextBlock(label='Description', required=False)),
                                            (
                                                'button_label',
                                                wagtail.blocks.CharBlock(label='Button label', required=False),
                                            ),
                                            ('button_url', wagtail.blocks.URLBlock(label='Button url', required=False)),
                                        ]
                                    ),
                                )
                            ],
                            help_text='Add two or three columns text',
                            label='Columns',
                            max_num=3,
                            min_num=2,
                            template='microsites/blocks/columns.html',
                        ),
                    ),
                    (
                        'links_block',
                        wagtail.blocks.StreamBlock(
                            [
                                (
                                    'link_block',
                                    wagtail.blocks.StructBlock(
                                        [
                                            (
                                                'title',
                                                wagtail.blocks.CharBlock(label='Title', max_length=255, required=False),
                                            ),
                                            (
                                                'description',
                                                wagtail.blocks.RichTextBlock(
                                                    features=[
                                                        'h2',
                                                        'h3',
                                                        'h4',
                                                        'bold',
                                                        'italic',
                                                        'ol',
                                                        'ul',
                                                        'hr',
                                                        'link',
                                                        'document-link',
                                                    ],
                                                    label='Description',
                                                    required=False,
                                                ),
                                            ),
                                            ('link_text', wagtail.blocks.CharBlock(label='Link text')),
                                            ('link_url', wagtail.blocks.CharBlock(label='Link url')),
                                        ],
                                        label='Link block',
                                    ),
                                ),
                                ('text', wagtail.blocks.RichTextBlock(label='Text')),
                            ],
                            block_counts={'link_block': {'max_num': 6}, 'text': {'max_num': 1}},
                            label='Links block',
                            template='microsites/blocks/link.html',
                        ),
                    ),
                    (
                        'cta',
                        wagtail.blocks.StructBlock(
                            [
                                ('title', wagtail.blocks.CharBlock(label='Title', max_length=255, required=True)),
                                (
                                    'teaser',
                                    wagtail.blocks.RichTextBlock(
                                        label='Teaser', template='microsites/blocks/text.html'
                                    ),
                                ),
                                (
                                    'link_label',
                                    wagtail.blocks.CharBlock(label='Link label', max_length=255, required=True),
                                ),
                                ('link', wagtail.blocks.CharBlock(label='Link', max_length=255, required=True)),
                            ],
                            label='CTA',
                            template='microsites/blocks/cta.html',
                        ),
                    ),
                    (
                        'pull_quote',
                        wagtail.blocks.StructBlock(
                            [
                                ('quote', wagtail.blocks.TextBlock()),
                                (
                                    'attribution',
                                    wagtail.blocks.CharBlock(label='Who said it?', max_length=255, required=False),
                                ),
                                ('role', wagtail.blocks.CharBlock(label='Their role', max_length=255, required=False)),
                                (
                                    'organisation',
                                    wagtail.blocks.CharBlock(
                                        label='Their organisation', max_length=255, required=False
                                    ),
                                ),
                                (
                                    'organisation_link',
                                    wagtail.blocks.URLBlock(
                                        label='Link to organisation site', max_length=255, required=False
                                    ),
                                ),
                            ],
                            label='Pull quote',
                            template='domestic/blocks/pull_quote_block.html',
                        ),
                    ),
                ],
                blank=True,
                null=True,
                use_json_field=True,
                verbose_name='Page body',
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='page_subheading',
            field=models.TextField(
                blank=True,
                help_text='This is a subheading that displays below the main title on the microsite page',
                verbose_name='Page subheading',
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='page_teaser',
            field=models.TextField(
                blank=True,
                help_text='This is a subheading that displays when the microsite is featured on another page',
                null=True,
                verbose_name='Page teaser',
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='page_title',
            field=models.TextField(null=True, verbose_name='Page title'),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='related_links',
            field=wagtail.fields.StreamField(
                [
                    ('page', wagtail.blocks.PageChooserBlock(blank=True, label='Page', null=True)),
                    (
                        'link',
                        wagtail.blocks.StructBlock(
                            [
                                ('title', wagtail.blocks.CharBlock(default='', form_classname='title', label='Title')),
                                (
                                    'full_url',
                                    wagtail.blocks.URLBlock(default='', form_classname='url', label='Full url'),
                                ),
                            ],
                            label='Link',
                        ),
                    ),
                ],
                blank=True,
                null=True,
                use_json_field=True,
            ),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='twitter',
            field=models.URLField(blank=True, verbose_name='Twitter'),
        ),
        migrations.AlterField(
            model_name='micrositepage',
            name='use_domestic_header_logo',
            field=models.BooleanField(
                default=True,
                help_text='If selected the dbt logo will be displayed in the header. Otherwise the UK Gov logo will be shown. Note this checkbox only works on the root page',
                verbose_name='Use domestic header logo',
            ),
        ),
    ]
