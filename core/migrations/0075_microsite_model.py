# Generated by Django 3.2.16 on 2023-03-07 09:06

import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
from django.conf import settings
from django.db import migrations, models

import core.blocks


class Migration(migrations.Migration):
    dependencies = [
        ('wagtailredirects', '0006_redirect_increase_max_length'),
        ('wagtailcore', '0066_collection_management_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0074_populate_country_iso2'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('wagtailmedia', '0003_copy_media_permissions_to_collections'),
        ('wagtailforms', '0004_add_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='MicrositePage',
            fields=[
                (
                    'page_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='wagtailcore.page',
                    ),
                ),
                ('cta_link', models.CharField(blank=True, max_length=255, verbose_name='CTA link')),
                ('cta_link_label', models.CharField(blank=True, max_length=255, verbose_name='CTA link label')),
                ('cta_teaser', models.TextField(blank=True, verbose_name='CTA teaser')),
                ('cta_title', models.CharField(blank=True, max_length=255, verbose_name='CTA title')),
                (
                    'page_body',
                    wagtail.core.fields.StreamField(
                        [
                            ('text', wagtail.core.blocks.RichTextBlock()),
                            (
                                'image',
                                wagtail.images.blocks.ImageChooserBlock(
                                    required=False, template='core/includes/_article_image.html'
                                ),
                            ),
                            (
                                'video',
                                wagtail.core.blocks.StructBlock(
                                    [('video', core.blocks.MediaChooserBlock())],
                                    template='core/includes/_article_video.html',
                                ),
                            ),
                            (
                                'columns',
                                wagtail.core.blocks.StreamBlock(
                                    [
                                        (
                                            'column',
                                            wagtail.core.blocks.StructBlock(
                                                [
                                                    (
                                                        'title',
                                                        wagtail.core.blocks.CharBlock(
                                                            label='Title', max_length=255, required=False
                                                        ),
                                                    ),
                                                    (
                                                        'image',
                                                        wagtail.images.blocks.ImageChooserBlock(
                                                            label='Hero Image', required=False
                                                        ),
                                                    ),
                                                    (
                                                        'description',
                                                        wagtail.core.blocks.RichTextBlock(
                                                            features=[
                                                                'h2',
                                                                'h3',
                                                                'h4',
                                                                'bold',
                                                                'italic',
                                                                'ol',
                                                                'ul',
                                                                'hr',
                                                                'link',
                                                                'document-link',
                                                            ],
                                                            label='Description',
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        'link',
                                                        wagtail.core.blocks.URLBlock(
                                                            label='Title link', required=False
                                                        ),
                                                    ),
                                                ]
                                            ),
                                        )
                                    ],
                                    help_text='Add two or three columns text',
                                    max_num=3,
                                    min_num=2,
                                    template='core/includes/_columns.html',
                                ),
                            ),
                            (
                                'pull_quote',
                                wagtail.core.blocks.StructBlock(
                                    [
                                        ('quote', wagtail.core.blocks.TextBlock()),
                                        (
                                            'attribution',
                                            wagtail.core.blocks.CharBlock(
                                                label='Who said it?', max_length=255, required=False
                                            ),
                                        ),
                                        (
                                            'role',
                                            wagtail.core.blocks.CharBlock(
                                                label='Their role', max_length=255, required=False
                                            ),
                                        ),
                                        (
                                            'organisation',
                                            wagtail.core.blocks.CharBlock(
                                                label='Their organisation', max_length=255, required=False
                                            ),
                                        ),
                                        (
                                            'organisation_link',
                                            wagtail.core.blocks.URLBlock(
                                                label='Link to organisation site', max_length=255, required=False
                                            ),
                                        ),
                                    ],
                                    template='domestic/blocks/pull_quote_block.html',
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                    ),
                ),
                (
                    'hero_image',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='core.alttextimage',
                    ),
                ),
                (
                    'page_subheading',
                    models.TextField(
                        blank=True,
                        help_text='This is a subheading that displays below the main title on the microsite page',
                    ),
                ),
                (
                    'page_teaser',
                    models.TextField(
                        blank=True,
                        help_text='This is a subheading that displays when the microsite is featured on another page',
                        null=True,
                    ),
                ),
                ('page_title', models.TextField(null=True)),
                (
                    'hero_video',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailmedia.media',
                    ),
                ),
                (
                    'hero_video_transcript',
                    wagtail.core.fields.RichTextField(
                        blank=True, help_text='If the video is present, a transcript must be provided.', null=True
                    ),
                ),
                (
                    'related_links',
                    wagtail.core.fields.StreamField(
                        [
                            ('page', wagtail.core.blocks.PageChooserBlock(blank=True, null=True)),
                            (
                                'link',
                                wagtail.core.blocks.StructBlock(
                                    [
                                        ('title', wagtail.core.blocks.CharBlock(default='', form_classname='title')),
                                        ('full_url', wagtail.core.blocks.URLBlock(default='', form_classname='url')),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                    ),
                ),
            ],
            options={
                'verbose_name': 'Microsite page',
                'verbose_name_plural': 'Microsite pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Microsite',
            fields=[
                (
                    'page_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='wagtailcore.page',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Microsite',
                'verbose_name_plural': 'Microsite',
            },
            bases=('wagtailcore.page',),
        ),
    ]
