# Generated by Django 2.2.14 on 2020-10-01 13:52

import core.blocks
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0034_add_choose_do_not_choose_block_to_detail_page'),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('summary', models.TextField()),
                ('body', wagtail.core.fields.StreamField([('media', wagtail.core.blocks.StreamBlock([('video', wagtail.core.blocks.StructBlock([('video', core.blocks.MediaChooserBlock())], template='core/includes/_case_study_video.html')), ('image', core.blocks.ImageBlock())], max_num=2, min_num=1)), ('text', wagtail.core.blocks.RichTextBlock(features=()))], help_text='This block must contain one Media section (with one or two items in it) and one Text section.', validators=[core.models.case_study_body_validation])),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, null=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, null=True, verbose_name='modified')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'verbose_name_plural': 'Case studies'
            },
        ),
        migrations.CreateModel(
            name='PersonalisationCountryTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Country tag for personalisation',
                'verbose_name_plural': 'Country tags for personalisation',
            },
        ),
        migrations.CreateModel(
            name='PersonalisationHSCodeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'HS Code tag for personalisation',
                'verbose_name_plural': 'HS Code tags for personalisation',
            },
        ),
        migrations.CreateModel(
            name='HSCodeTaggedCaseStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs_code_tagged_items', to='core.CaseStudy')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hscode_tagged_case_studies', to='core.PersonalisationHSCodeTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CountryTaggedCaseStudy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_tagged_items', to='core.CaseStudy')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_tagged_case_studies', to='core.PersonalisationCountryTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='casestudy',
            name='country_code_tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='core.CountryTaggedCaseStudy', to='core.PersonalisationCountryTag', verbose_name='Country tags'),
        ),
        migrations.AddField(
            model_name='casestudy',
            name='hs_code_tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='core.HSCodeTaggedCaseStudy', to='core.PersonalisationHSCodeTag', verbose_name='HS-code tags'),
        ),
    ]
